---
# This is the auth token for JupyterHub. You can create it with:
#     openssl rand -hex 16
# Note that this should never be stored in plaintext; you should probably
# override it in an encrypted vault file.
configproxy_auth_token: ''

# This is the cookie secret for JupyterHub. You can create it with:
#     openssl rand -hex 2048
# Note that this should never be stored in plaintext; you should probably
# override it in an encrypted vault file.
cookie_secret: ''

# Get these from the Google OAuth application. Note that these should never
# be stored in plaintext, they should be overwritten in an encrypted vault file.
oauth_client_id: ''
oauth_client_secret: ''
oauth_callback_url: ''
oauth_hosted_domain: ''

# This is the password for the 'postgres' user for the JupyterHub database (the
# database name will be 'jupyterhub')
jpy_postgres_password: ''

# This is the name of an admin user of the JupyterHub instance, necessary
# to get an API key from JupyterHub
jupyterhub_admin_user: ''

# Root url of the hub (e.g. 'https://compmodels.tmpnb.org/')
hub_base_url: ''

# User who will run nbgrader and path to the root of the nbgrader directory
# structure relative to that user's home directory
nbgrader_user: ''
nbgrader_root: ''

# The name of the repository containing the homework assignments, the public URL
# for the repository, and a private URL from which to clone the repository.
# These two URLs can be the same, but if you have a private repo then the clone
# URL can take the form of
# 'https://<username>:<access_token>@github.com/org/repo.git' rather than
# 'https://github.com/org/repo.git'. The clone URL will be used to clone the
# repo, but then the remote will be set to the public URL, so that your access
# token isn't stored anywhere.
assignments_repo_name: ''
assignments_repo_url: ''
assignments_repo_clone_url: ''

# The password for the 'postgres' user for the nbgrader database (the database
# name will be 'gradebook')
gradebook_postgres_password: ''

# This is the path to where the docker TLS certificates are stored -- this is
# necessary for the SwarmSpawner to actually be able to communicate with swarm
docker_tls_path: /root/.docker

# These are the usernames that will have JupyterHub admin access. This list
# should probably be overwritten in an encrypted vault file.
jupyterhub_admins: []

# These are the usernames that have access to JupyterHub, but not admin access.
# This list should probably be overwritten in an encrypted vault file.
jupyterhub_users: []

# This is where the TLS certificates and keys should be stored for Docker
docker_tls_path: /root/.docker

# This is the port that swarm will attempt to connect to for each of the
# Docker hosts
docker_server_port: 2376

# This is the strategy that swarm will use to allocate containers. For details
# on the different options, see the swarm documentation.
docker_swarm_strategy: spread
